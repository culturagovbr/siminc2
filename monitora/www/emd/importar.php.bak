<pre><?php
//die("<h1>Cuidado ao executar este script</h1>");
//exit;

define("TESTE", true);
set_time_limit(0);

$data = "2005-12-11";

$arquivo = "emendas20051211.csv";



$servidor_bd = '10.210.3.17';
$porta_bd = '5432';
$nome_bd = 'simec';
$usuario_db = 'phpsimec';
$senha_bd = 'pgphpsimecspo';

$pgconn = pg_connect("host=".$servidor_bd." port=".$porta_bd." dbname=".$nome_bd."  user=".$usuario_db." password=".$senha_bd);
pg_set_client_encoding($pgconn,'LATIN5');
pg_query($pgconn, 'begin; ');



$fp = fopen($arquivo, "r") or die("erro ao abrir $arquivo");
$campos = fgetcsv($fp, 1000, ";", "\"");
$linha = 1;

$sqlSelAcao = "SELECT acaid FROM acao WHERE unicod = '%s' AND prgcod = '%s' AND acacod = '%s' AND loccod = '%s'";
$sqlSelEmenda = "SELECT emdid FROM dbemd.emenda WHERE emdcod = '%s'";
$sqlSelEmendaOID = "SELECT emdid FROM dbemd.emenda WHERE oid = '%s'";
$sqlInsEmenda = "INSERT INTO dbemd.emenda (
						emdcod, 
						acaid, 
						emdcodautor,
						emdcodtipoautor,
						emdufautor,
						emdnomeautor,
						emdsglpartidoautor,
						emdsaldo
					) VALUES (
						'%s', 
						'%s', 
						'%s', 
						'%s', 
						'%s', 
						'%s', 
						'%s', 
						'%s'
				)";
$sqlSelExecucao = "SELECT * FROM dbemd.execucao WHERE emdid = '%s' AND exedata = '%s'";
$sqlInsExecucao = "INSERT INTO dbemd.execucao (
						exedata,
						emdid,
						exedotainicial,
						exeautorizado,
						exeempenhado,
						exeliquidado,
						exepago
					) VALUES (
						'%s', 
						'%s', 
						'%s', 
						'%s', 
						'%s', 
						'%s', 
						'%s'
				)";
$sqlDelExecucao = "DELETE FROM dbemd.execucao WHERE emdid = '%s' AND exedata = '%s'";

try {
while($row = fgetcsv($fp, 1000, ";", "\"")) {
//var_dump($row);exit;
	$funcprog = explode(".", $row[10]);
	if(@count($funcprog)<5) {
		throw new Exception("QUANTIDADE DE CAMPOS ERRADA NA FUNCIONAL PROGRAMATICA (" . count($funcprog) . "): " . $row[10]);
	}

	$query = sprintf($sqlSelAcao, $row[4], $funcprog[2], $funcprog[3], $funcprog[4]);
	if(TESTE)
		echo "$query\n";
	$rs = pg_query($query) or die("ERRO CONSULTA: $query");
	$acaid = pg_result($rs, 0, "acaid");
	if(!(bool)$acaid) {
		throw new Exception("CÓDIGO DA AÇÃO NÃO ENCONTRADO: $query");
	}

	$query = sprintf($sqlSelEmenda, $row[7]);
	if(TESTE)
		echo "$query\n";
	$rs = pg_query($query);
	if(pg_num_rows($rs)>0) {
		$emdid = pg_result($rs, 0, "emdid");
		echo "AÇÃO ($acaid) JÁ EXISTE\n";
	}
	else {
		$dadosEmenda = array($row[7]	// cod_emenda
			,$acaid
			,$row[6]					// cod_autor
			,$row[3]					// cod_tipo_autor
			,$row[12]					// uf_autor
			,$row[8]					// nom_autor
			,$row[9]					// sgl_partido
			,$row[14]					// saldo
		);
		
		$query = vsprintf($sqlInsEmenda, $dadosEmenda);
		if(TESTE)
			echo "$query\n";
		$rs = pg_query($query);
		if(!$rs) {
			throw new Exception("Erro ao inserir emenda: $query\n" . pg_errormessage($pgconn));
		}
		
		$oid = pg_last_oid($rs);
		$query = sprintf($sqlSelEmendaOID, $oid);
		if(TESTE)
			echo "$query\n";

		$rs = pg_query($query);
		
		$emdid = pg_result($rs, 0, "emdid");
		if(!(bool)$emdid) {
			throw new Exception("Não foi possível recuperar a emenda inserida OID: $oid\nCONSULTA: $query\n" . pg_errormessage($pgconn));
		}
	}
	
	// execucao
	$query = sprintf($sqlSelExecucao, $emdid, $data);
	if(TESTE)
		echo "$query\n";

	$rs = pg_query($query);
	if(pg_num_rows($rs)>0) {
		$query = sprintf($sqlDelExecucao, $emdid, $data);
		if(TESTE)
			echo "$query\n";
		if(!pg_query($query)) {
			throw new Exception("ERRO AO EXCLUIR EXECUÇÃO PARA A EMENDA: $emdid ($data)\n$query");
		}
	}
	
	$dadosExecução = array($data
		,$emdid
		,number_format((float)$row[14], '2', '.', '')
		,number_format((float)$row[15], '2', '.', '')
		,number_format((float)$row[16], '2', '.', '')
		,number_format((float)$row[17], '2', '.', '')
		,number_format((float)$row[18], '2', '.', '')
	);
	
	$query = vsprintf($sqlInsExecucao, $dadosExecução);
	if(TESTE)
		echo "$query\n";

	if(!pg_query($query)) {
		throw new Exception("ERRO AO INSERIR EXECUÇÃO PARA A EMENDA: $emdid ($data)\n$query");		
	}

	printf("LINHA: %100d OK\n", $linha++);
	if(TESTE)
		echo "\n";
	flush();
}
}
catch(Exception $e) {
	var_dump($dados);
	var_dump($linha);
	var_dump($e);
}
if(TESTE)
	pg_query($pgconn, 'rollback; ');
else
	pg_query($pgconn, 'commit; ');
exit(1);
?>
</pre>